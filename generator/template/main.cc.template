/****************************************************
 *
 * ****     ***     ****    *   *    *****    *****
 * *  *    *   *   *        ****     ***        *
 * *   *    ***     ****    *   *    *****      *
 * ${FILE_NAME}
 * Generated by rocket framework rocket_generator.py
 * Do not edit !!!
****************************************************/

#include <google/protobuf/service.h>
#include "rocket/net/tcp/net_addr.h"
#include "rocket/common/log.h"
#include "rocket/common/config.h"
#include "rocket/net/tcp/tcp_server.h"
#include "rocket/net/rpc/rpc_dispatcher.h"

int main(int argc, char* argv[]) {

  if (argc != 2) {
    printf("Start ${PROJECT_NAME} error, argc not 2 \n");
    printf("Start like this: \n");
    printf("./${PROJECT_NAME} ../conf/rocket.xml \n");
    return 0;
  }

  rocket::Config::SetGlobalConfig(argv[1]);

  rocket::Logger::InitGlobalLogger();

  std::shared_ptr<${SERVICE_NAME}> service = std::make_shared<${SERVICE_NAME}>();
  
  rocket::RpcDispatcher::GetRpcDispatcher()->registerService(service);

  rocket::IPNetAddr::s_ptr addr = std::make_shared<rocket::IPNetAddr>("127.0.0.1", rocket::Config::GetGlobalConfig()->m_port);

  rocket::TcpServer tcp_server(addr);

  tcp_server.start();

  return 0;
}

